<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.soo.helloworld.mapper.AlarmMapper">

    <insert id="insertAlarm" parameterType="me.soo.helloworld.model.alarm.AlarmData">
        INSERT INTO alarms (alarmTo, alarmFrom, type) VALUES (#{to}, #{from}, #{type})
    </insert>

    <select id="getAlarmList" parameterType="me.soo.helloworld.model.alarm.AlarmListRequest"
            resultType="me.soo.helloworld.model.alarm.Alarm">

        SELECT id, alarmTo, alarmFrom, type, hasRead, createdAt FROM alarms
        WHERE alarmTo = #{userId}
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getAlarm" parameterType="map" resultType="me.soo.helloworld.model.alarm.Alarm">

        SELECT id, alarmTo, alarmFrom, type, hasRead, createdAt FROM alarms
        WHERE id = #{alarmId} AND alarmTo = #{userId}
    </select>

    <update id="updateToRead">

        UPDATE alarms SET hasRead = 'Y'
        WHERE id = #{alarmId} AND alarmTo = #{userId}
    </update>

    <select id="getHasReadStatus" parameterType="map" resultType="String">
        SELECT hasRead FROM alarms WHERE id = #{alarmId} AND alarmTo = #{userId}
    </select>

    <select id="isAlarmExist" parameterType="map" resultType="boolean">
        SELECT EXISTS (SELECT id FROM alarms WHERE id = #{alarmId} AND alarmTo = #{userId})
    </select>

    <delete id="deleteAlarm" parameterType="map">
        DELETE FROM alarms WHERE id = #{alarmId} AND alarmTo = #{userId}
    </delete>

    <delete id="deleteDispatchedAlarm" parameterType="me.soo.helloworld.model.alarm.AlarmData">

        DELETE FROM alarms
        WHERE alarmTo = #{to} AND alarmFrom = #{from} AND type = #{type}
    </delete>
</mapper>