<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.soo.helloworld.mapper.RecommendationMapper">

    <select id="isRecommendationExist" parameterType="String" resultType="boolean">
        SELECT EXISTS (SELECT id FROM recommendations WHERE recomFrom = #{from} AND recomTo = #{to})
    </select>

    <insert id="insertRecommendation" parameterType="me.soo.helloworld.model.recommendation.Recommendation">
        INSERT INTO recommendations (recomTo, recomFrom, content) VALUES (#{to}, #{from}, #{content})
    </insert>

    <select id="getHowLongSinceWrittenAt" parameterType="map" resultType="Integer">

        SELECT TO_DAYS(NOW()) - TO_DAYS(writtenAt) FROM recommendations
        WHERE recomTo = #{to} AND recomFrom = #{from}
    </select>

    <update id="updateRecommendation" parameterType="map">

        UPDATE recommendations SET content = #{modifiedContent}
        WHERE recomTo = #{to} AND recomFrom = #{from}
    </update>

    <select id="getRecommendationsForProfile" parameterType="String"
            resultType="me.soo.helloworld.model.recommendation.RecommendationForProfile">

        SELECT recomFrom AS 'from', content, writtenAt FROM recommendations
        WHERE recomTo = #{userId}
        ORDER BY id DESC
        LIMIT 5;
    </select>

    <select id="getRecommendationsAboutTarget" parameterType="map"
            resultType="me.soo.helloworld.model.recommendation.Recommendations">

        SELECT id, recomFrom AS 'from', content, writtenAt FROM recommendations
        WHERE recomTo = #{targetId}
        <if test="pagination.cursor != null">
            AND id <![CDATA[<]]> #{pagination.cursor}
        </if>
            AND NOT EXISTS (SELECT blockId FROM block WHERE blockId = #{userId} AND blockedBy = #{targetId})
        ORDER BY id DESC
        LIMIT #{pagination.pageSize}
    </select>
</mapper>