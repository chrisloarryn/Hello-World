<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.soo.helloworld.mapper.FriendMapper">

    <insert id="sendFriendRequest" parameterType="String">

        INSERT INTO friends (userId, friendId, status)
            VALUES (#{userId}, #{targetId}, 2), (#{targetId}, #{userId}, 3)
    </insert>

    <select id="getFriendStatus" parameterType="String" resultType="me.soo.helloworld.enumeration.FriendStatus">

        SELECT IFNULL(MAX(status), 1)
            FROM friends WHERE userId = #{userId} AND friendId = #{targetId}
    </select>

    <delete id="deleteFriend" parameterType="String">

        DELETE FROM friends
            WHERE (userId = #{userId} AND friendId = #{targetId})
                OR (userId = #{targetId} AND friendId = #{userId})
    </delete>

    <update id="updateFriendRequest" parameterType="map">

        UPDATE friends SET status = #{status}, friendedAt = NOW()
            WHERE (userId = #{userId} AND friendId = #{targetId})
                OR (userId = #{targetId} AND friendId = #{userId})
    </update>

    <select id="getFriendList" parameterType="me.soo.helloworld.model.friend.FriendListRequest"
            resultType="me.soo.helloworld.model.friend.FriendList">

        SELECT friendId, status FROM friends
            WHERE userId = #{userId} AND status = #{status}
        ORDER BY id DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="getFriendshipDuration" parameterType="map" resultType="Integer">

        SELECT TO_DAYS(NOW()) - TO_DAYS(friendedAt) FROM friends
        WHERE userId = #{userId}
            AND friendId = #{targetId}
            AND `status` = #{status}
    </select>
</mapper>